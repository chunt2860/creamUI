@use "mixins/var" as *;
@use "common/design" as *;
@use "mixins/function" as *;
@use "mixins/mixins" as *;

@include b(color-picker) {
  width: 260px;
  border-radius: 8px;
  border: $borderSize solid var(--bp-gray-3);
  background-color: var(--bp-gray-0);
  box-sizing: border-box;

  .color-picker-panel {
    position: relative;
    height: 160px;
    border-top-left-radius: 8px;
    border-top-right-radius: 8px;
    background-color: var(--bp-primary-3);
    overflow: auto;

    .color-picker-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-top-left-radius: 8px;
      border-top-right-radius: 8px;
      background-image: linear-gradient(0deg, #000000, transparent),
        linear-gradient(90deg, #ffffff, rgba(255, 255, 255, 0));
    }

    .color-picker-pointer {
      position: absolute;
      width: 14px;
      height: 14px;
      border: 2px solid var(--bp-gray-0);
      border-radius: 50%;
      cursor: pointer;
    }
  }

  .option-area {
    @include flex(row, space-between, center) {
      width: 100%;
      flex-wrap: nowrap;
      flex-direction: row;
      padding: 10px 16px;
    }

    .slider {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: center;
      height: 34px;

      .hue-slider,
      .alpha-slider {
        position: relative;
        width: 172px;
        height: 13px;
        border-radius: 10px;
        border: 1px solid var(--bp-gray-2);
        box-sizing: border-box;
      }

      .hue-slider {
        background: linear-gradient(to right, red, yellow, lime, cyan, blue, magenta, red);

        .hue-pointer {
          position: absolute;
          left: 0;
          top: -2.5px;
          box-sizing: border-box;
          width: 16px;
          height: 16px;
          border-radius: 50%;
          border: 1px solid var(--bp-gray-2);
          cursor: pointer;

          &::after {
            display: block;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            border: 3px solid var(--bp-gray-0);
            content: "";
          }
        }
      }

      .alpha-slider-bg {
        background-image: conic-gradient(
          rgba(0, 0, 0, 0.06) 0 25%,
          transparent 0 50%,
          rgba(0, 0, 0, 0.06) 0 75%,
          transparent 0
        );
        background-size: 6px 6px;
        border-radius: 10px;

        .alpha-slider {
          .alpha-pointer {
            position: absolute;
            left: 0;
            top: -2.5px;
            box-sizing: border-box;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            border: 1px solid var(--bp-gray-2);
            cursor: pointer;

            &::after {
              display: block;
              width: 100%;
              height: 100%;
              border-radius: 50%;
              border: 3px solid var(--bp-gray-0);
              content: "";
            }
          }
        }
      }
    }

    .preview-box {
      background-image: conic-gradient(
        rgba(0, 0, 0, 0.06) 0 25%,
        transparent 0 50%,
        rgba(0, 0, 0, 0.06) 0 75%,
        transparent 0
      );
      background-size: 6px 6px;
      border-radius: 50%;

      .preview {
        width: 38px;
        height: 38px;
        background-color: var(--bp-primary-1);
        border-radius: 50%;
        border: 1px solid var(--bp-gray-2);
      }
    }
  }

  .input-area {
    padding: 0 16px 10px 16px;
    
    &-value {
      display: flex;
    }
  }
}

.#{$B}-trigger {
  @include flex(row, center, center) {
    width: 32px;
    height: 32px;
    border-radius: 4px;
    border: $borderSize solid var(--bp-gray-2);
    background-color: var(--bp-gray-1);
    cursor: pointer;
  }

  &-inner {
    width: 22px;
    height: 22px;
    border-radius: 2px;
    background-color: var(--bp-primary-5);
  }
}

div[class*="trigger-wrapper"] {
  .#{$B} {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }
}
