@use "mixins/var" as *;
@use "mixins/function" as *;
@use "mixins/mixins.scss" as *;
@use "common/sizes" as *;

@include b(pagination) {
  position: relative;
  @include flex(row, flex-start, center);

  ul,
  &-container {
    @include flex(row, center, center);
    margin: 0;
    padding: 0;

    .#{$B}-item {
      @include flex(row, center, center);
      list-style: none;
      margin: 0;
      width: max-content;
      cursor: pointer;

      svg[class*="-icon-"] {
        fill: var(--bp-gray-8);
      }

      .page-text {
        color: var(--bp-gray-8);
        font-weight: normal;
      }
    }

    .#{$B}-pager-active {
      color: var(--bp-primary-6);
      background-color: var(--bp-primary-1);
      font-weight: bold;
      transition: all 0.2s ease;
    }
  }
}

.#{$B}-prev,
.#{$B}-next,
.#{$B}-pager {
  fill: var(--bp-gray-8);
  color: var(--bp-gray-8);
  font-weight: normal;
  transition: all 0.2s ease;

  &:hover {
    background-color: var(--bp-gray-1);
    transition: all 0.2s ease;
  }
}

.#{$B}-prev-disabled,
.#{$B}-next-disabled {
  opacity: 0.6;
  pointer-events: none;
  cursor: default;
}

@each $size in $sizes {
  .#{$B}-#{$size} {
    .#{$B}-item {
      height: getCssVar("size-height", $size);

      &:not(:first-child) {
        margin-left: calc(getCssVar("size-padding", $size) / 2);
      }

      .page-text {
        font-size: calc(getCssVar("size-font-size", $size) - 2px);
      }
    }

    .#{$B}-prev,
    .#{$B}-next,
    .#{$B}-pager {
      font-size: calc(getCssVar("size-font-size", $size) - 2px);
      border-radius: getCssVar("size-border-radius", $size);
      min-width: getCssVar("size-height", $size);
    }

    .#{$B}-prev,
    .#{$B}-next {
      padding: 0 calc(getCssVar("size-padding", $size) / 3);
    }

    .#{$B}-jumper {
      div[class*="input-number"] {
        min-width: calc(getCssVar("size-height", $size) * 1.6);
        width: calc(getCssVar("size-height", $size) * 1.6);
        margin: 0 calc(getCssVar("size-padding", $size) / 2);
      }
    }

    .#{$B}-sizes {
      div[class*="-select"] {
        width: calc(getCssVar("size-height", $size) * 3.3);
      }
    }
  }
}
